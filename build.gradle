group 'nl.bioinf.cawarmerdam.compound_evolver'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'war'

// Define the main class for the application
mainClassName = 'nl.bioinf.cawarmerdam.compound_evolver.control.CompoundEvolver'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url artifactory_contextUrl
        credentials {
            username = artifactory_user
            password = artifactory_password
        }
    }
    flatDir {
        dirs "libs"
    }
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'jstl', name: 'jstl', version: '1.2'
    compile group: 'taglibs', name: 'standard', version: '1.1.2'
    compile group: 'com.chemaxon', name: 'marvin-app', version: '19.27.0'
    compile group: 'com.chemaxon', name: 'jchem-main', version: '19.27.0'
    compile group: 'com.ibm.icu', name: 'icu4j', version: '63.1'
}

jar {
    description 'creates executable jar without dependencies'
    baseName = 'CompoundEvolver-Jar'

    manifest {
        attributes 'Main-Class': mainClassName,
                "Class-Path": configurations.compile.collect { "lib/" + it.getName() }.join(' ')
    }
}

//create a single Jar with all dependencies
// see https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
    group 'build'
    description 'fat jar building with dependencies'

    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'nl.bioinf.cawarmerdam.compound_evolver.control.EvolverOptimizer'
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    baseName = 'optimizer-fatjar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task install(type: Copy) {
    group 'build'
    dependsOn build
    from configurations.runtime
    into "${project.projectDir}/build/libs/lib"
}